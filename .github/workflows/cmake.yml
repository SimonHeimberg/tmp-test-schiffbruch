name: CMake

on:
  push:
    branches: [ "master" ]
    paths:
      - src/**
      - bin/**
      - CMakeLists.txt
  pull_request:
    branches: [ "master" ]
    paths:
      - src/**
      - bin/**
      - CMakeLists.txt

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false # do not abort other jobs when one fails
      matrix:
        config:
          - os: ubuntu-latest
            in_asset: linux
          #- os: windows-latest
          #  in_asset: windows
    runs-on: ${{ matrix.config.os }}

    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix

    steps:
    - uses: actions/checkout@v3
    
    - name: install dependency (linux)
      run: sudo apt-get install libsfml-dev
      if: matrix.config.in_asset == 'linux'
      
      # TODO get dependencies on windows

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: compress build (tgz)
      run: tar -czf schiffbruch-${{ matrix.config.in_asset }}-${{ runner.arch }}.tgz schiffbruch
      working-directory: build
      if: matrix.config.in_asset == 'linux'

    - name: compress build (zip)
      run: zip schiffbruch-${{ matrix.config.in_asset }}-${{ runner.arch }}.zip schiffbruch
      working-directory: build
      if: matrix.config.in_asset == 'windows'

    - name: make build temporarely available
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: build/schiffbruch-*-*.*

#    - name: Test
#      working-directory: ${{github.workspace}}/build
#      # Execute tests defined by the CMake configuration.  
#      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#      run: ctest -C ${{env.BUILD_TYPE}}

  publish:
    # separate because it shall run only once
    needs: build
    runs-on: linux-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
    - name: get release uploads
      uses: actions/download-artifact@v3
      with:
        name: dist
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: schiffbruch-*-*.*
        draft: true
